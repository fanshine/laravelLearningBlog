<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

    <title></title>
    <link href="http://fanshine.github.io/laravelLearningBlog//atom.xml" rel="self" type="application/atom+xml"/>
    <link href="http://fanshine.github.io/laravelLearningBlog/" rel="alternate" type="text/html" />
    <updated>2014-08-12T23:20:08+08:00</updated>
    <id>http://fanshine.github.io/laravelLearningBlog/</id>

    <author>
        <name>Laravel 知识整理</name>
        <email>fanshine124@gmail.com</email>
    </author>

    
    <entry>
        <title>开始使用Laravel4</title>
        <link href="http://fanshine.github.io/laravelLearningBlog//2014-08-11/getting-started-with-laravel-4.html"/>
        <updated>2014-08-11T00:00:00+08:00</updated>
        <id>http://fanshine.github.io/laravelLearningBlog//2014-08-11/getting-started-with-laravel-4.html</id>
        <content type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/laravel/framework&quot;&gt;Laravel 4&lt;/a&gt; 是流行的PHP框架&lt;a href=&quot;http://laravel.com/&quot;&gt;Laravel&lt;/a&gt;的一个最新升级版本。Laravel是一个“干净优雅”的用于Web开发的现代PHP框架。受&lt;a href=&quot;http://rubyonrails.org/&quot;&gt;Ruby on Rails&lt;/a&gt;，以及&lt;a href=&quot;http://symfony.com/&quot;&gt;Symfony&lt;/a&gt;框架的启发，Laravel 4致力于让你使用近年来日益完善的PHP新技术来开发好的web程序。&lt;/p&gt;

&lt;p&gt;Laravel 4脱胎于&lt;a href=&quot;http://laravel.com&quot;&gt;Laravel 3&lt;/a&gt;，但是对上一个版本又做了很多的改进。现在，Laravel 4是一个经过了大量测试，并且在维持干净优雅的语法结构的基础上，继续添加新的组件和特性的框架。&lt;/p&gt;

&lt;p&gt;Laravel 4通过&lt;a href=&quot;http://getcomposer.org/&quot;&gt;Composer&lt;/a&gt;来管理更新和独立的第三方组件。现在可以更自由的混合匹配其他的PHP组件。Laravel 4本身也引用了一些目前最流行的来自Symfony框架的组件，并没有重复的制造轮子。&lt;/p&gt;

&lt;p&gt;所有这一切使得Laravel 4成为你下一个项目的所需框架的最好的选择。&lt;/p&gt;

&lt;p&gt;Laravel 4目前还没有正式发布，但是你已经可以开始尝试使用它了。(文章写于2013-04-29，现在Laravel 4.2都已经正式发布了)&lt;/p&gt;

&lt;p&gt;在这个教程中，我会展示所有Laravel 4的技巧以实现一个项目。&lt;/p&gt;

&lt;p&gt;这是我第二次写Laravel 4的教程。第一次我根据&lt;a href=&quot;http://four.laravel.com&quot;&gt;Laravel 4的文档&lt;/a&gt;写了如何配置起一个Laravel 4的项目。然而，在读了&lt;a href=&quot;https://twitter.com/fideloper&quot;&gt;Chris Fidao&lt;/a&gt;写的&lt;a href=&quot;http://fideloper.com/best-way-to-install-laravel4&quot;&gt;教程&lt;/a&gt;后，我决定重新写一个教程，但是和&lt;a href=&quot;https://twitter.com/akuzemchak&quot;&gt;Aaron Kuzemchak&lt;/a&gt;写得&lt;a href=&quot;https://gist.github.com/akuzemchak/5210425&quot;&gt;教程&lt;/a&gt;有一点区别。所以，感谢前两位的贡献，我得以在此基础上继续深入探讨如何使用Laravel 4。&lt;/p&gt;

&lt;h2&gt;环境要求&lt;/h2&gt;

&lt;p&gt;Laravel 4基本无需额外的配置，但是在本机使用还是对环境有一定的要求。&lt;/p&gt;

&lt;p&gt;首先，你需要安装&lt;a href=&quot;http://getcomposer.org/&quot;&gt;Composer&lt;/a&gt;。Composer是一个PHP的包管理工具，允许你很方便的在自己的工程中管理不同的PHP组件。如果你没能把Composer配置起来，可以看一下&lt;a href=&quot;http://culttt.com/2013/01/07/what-is-php-composer/&quot;&gt;这篇文章&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;其次，你也需要确保PHP的最低版本是&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;5.3.7&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;，并且安装好&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;MCrypt PHP&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;扩展&lt;/p&gt;
</content>
    </entry>
    

</feed>

